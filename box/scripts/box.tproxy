#!/system/bin/sh

export PATH="/data/adb/magisk:/data/adb/ksu/bin:/data/adb/ap/bin:$PATH:/data/data/com.termux/files/usr/bin"

scripts=$(realpath $0)
scripts_dir=$(dirname ${scripts})

source ${scripts_dir}/box.config

table_id="2024"
id="222"

log() {
  export TZ=Asia/Shanghai
  now=$(date +"[%Y-%m-%d %H:%M:%S %Z]")
  case $1 in
    Info)
      [ -t 1 ] && echo -e "\033[1;32m${now} [Info]: $2\033[0m" || echo "${now} [Info]: $2"
      ;;
    Warn)
      [ -t 1 ] && echo -e "\033[1;33m${now} [Warn]: $2\033[0m" || echo "${now} [Warn]: $2"
      ;;
    Error)
      [ -t 1 ] && echo -e "\033[1;31m${now} [Error]: $2\033[0m" || echo "${now} [Error]: $2"
      ;;
    *)
      [ -t 1 ] && echo -e "\033[1;30m${now} [$1]: $2\033[0m" || echo "${now} [$1]: $2"
      ;;
  esac
}

uid_list=()
find_packages_uid() {
  for user_package in ${user_packages_list[@]} ; do
    user=$(echo ${user_package} | awk -F ':' '{print $1}')
    package=$(echo ${user_package} | awk -F ':' '{print $2}')
    uid="$(awk '{if($1=="'${package}'"){print $2}}' /data/system/packages.list)"
    if [[ -n "${uid}" ]]; then
      uid_list[${#uid_list[@]}]=$(expr ${user} \* "100000" + ${uid})
    fi
  done
}

probe_user_group() {
  if bin_pid=$(busybox pidof sing-box) ; then
    box_user=$(stat -c %U /proc/${bin_pid})
    box_group=$(stat -c %G /proc/${bin_pid})
    return 0
  else
    box_user=$(echo ${box_user_group} | awk -F ':' '{print $1}')
    box_group=$(echo ${box_user_group} | awk -F ':' '{print $2}')
    return 1
  fi
}

create_ip_rules() {
  ip -4 rule add fwmark ${id} table ${table_id} pref ${id}
  ip -4 route add local 0.0.0.0/0 dev lo table ${table_id}
  if [ "${ipv6}" = "enable" ] ; then
    ip -6 rule add fwmark ${id} table ${table_id} pref ${id}
    ip -6 route add local ::/0 dev lo table ${table_id}
  fi
}

delete_ip_rules() {
  ip -4 rule del fwmark ${id} table ${table_id} pref ${id} 2>/dev/null
  ip -4 route flush table ${table_id} 2>/dev/null
  if [ "${ipv6}" = "enable" ] ; then
    ip -6 rule del fwmark ${id} table ${table_id} pref ${id} 2>/dev/null
    ip -6 route flush table ${table_id} 2>/dev/null
  fi
}

start_tproxy() {
  create_ip_rules

  iptables -w 100 -t mangle -N BOX_EXTERNAL
  iptables -w 100 -t mangle -F BOX_EXTERNAL
  iptables -w 100 -t mangle -N BOX_LOCAL
  iptables -w 100 -t mangle -F BOX_LOCAL

  for subnet in ${intranet[@]} ; do
    iptables -w 100 -t mangle -A BOX_EXTERNAL -d ${subnet} -j RETURN
    iptables -w 100 -t mangle -A BOX_LOCAL -d ${subnet} -j RETURN
  done

  iptables -w 100 -t mangle -N LOCAL_IP_V4
  iptables -w 100 -t mangle -F LOCAL_IP_V4
  iptables -w 100 -t mangle -A BOX_EXTERNAL -j LOCAL_IP_V4
  iptables -w 100 -t mangle -A BOX_LOCAL -j LOCAL_IP_V4

  iptables -w 100 -t mangle -A BOX_EXTERNAL -p tcp -i lo -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
  iptables -w 100 -t mangle -A BOX_EXTERNAL -p udp -i lo -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}

  if [ "${ap_list}" != "" ] ; then
    for ap in ${ap_list[@]} ; do
      iptables -w 100 -t mangle -A BOX_EXTERNAL -p tcp -i ${ap} -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
      iptables -w 100 -t mangle -A BOX_EXTERNAL -p udp -i ${ap} -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
    done
    log Info "${ap_list[*]} transparent proxy."
  fi

  iptables -w 100 -t mangle -I PREROUTING -j BOX_EXTERNAL

  iptables -w 100 -t mangle -A BOX_LOCAL -m owner --uid-owner ${box_user} --gid-owner ${box_group} -j RETURN

  if [ "${ignore_out_list}" != "" ] ; then
    for ignore in ${ignore_out_list[@]} ; do
      iptables -w 100 -t mangle -A BOX_LOCAL -o ${ignore} -j RETURN
    done
    log Info "${ignore_out_list[*]} ignore transparent proxy."
  fi

  if [ "${proxy_mode}" = "blacklist" ] ; then
    if [ "${uid_list}" = "" ] ; then
      iptables -w 100 -t mangle -A BOX_LOCAL -p tcp -j MARK --set-mark ${id}
      iptables -w 100 -t mangle -A BOX_LOCAL -p udp -j MARK --set-mark ${id}
      log Info "transparent proxy for all apps."
    else
      for appid in ${uid_list[@]} ; do
        iptables -w 100 -t mangle -A BOX_LOCAL -m owner --uid-owner ${appid} -j RETURN
      done
      iptables -w 100 -t mangle -A BOX_LOCAL -p tcp -j MARK --set-mark ${id}
      iptables -w 100 -t mangle -A BOX_LOCAL -p udp -j MARK --set-mark ${id}
      log Info "proxy mode: ${proxy_mode}, ${user_packages_list[*]} no transparent proxy."
    fi
    if [ "${gid_list}" != "" ] ; then
      for gid in ${gid_list[@]} ; do
        iptables -w 100 -t mangle -A BOX_LOCAL -m owner --gid-owner ${gid} -j RETURN
      done
      log Info "proxy mode: ${proxy_mode}, GID ${gid_list[*]} no transparent proxy."
    fi
  elif [ "${proxy_mode}" = "whitelist" ] ; then
    if [ "${uid_list}" != "" ] ; then
      for appid in ${uid_list[@]} ; do
        iptables -w 100 -t mangle -A BOX_LOCAL -p tcp -m owner --uid-owner ${appid} -j MARK --set-mark ${id}
        iptables -w 100 -t mangle -A BOX_LOCAL -p udp -m owner --uid-owner ${appid} -j MARK --set-mark ${id}
      done
      log Info "proxy mode: ${proxy_mode}, ${user_packages_list[*]} transparent proxy."
    fi
    if [ "${gid_list}" != "" ] ; then
      for gid in ${gid_list[@]} ; do
        iptables -w 100 -t mangle -A BOX_LOCAL -p tcp -m owner --gid-owner ${gid} -j MARK --set-mark ${id}
        iptables -w 100 -t mangle -A BOX_LOCAL -p udp -m owner --gid-owner ${gid} -j MARK --set-mark ${id}
      done
      log Info "proxy mode: ${proxy_mode}, GID ${gid_list[*]} transparent proxy."
    fi
  elif [ "${proxy_mode}" = "core" ] ; then
    log Info "proxy mode: ${proxy_mode}, no apps transparent proxy."
  fi

  iptables -w 100 -t mangle -I OUTPUT -j BOX_LOCAL

  if [ "${ipv6}" = "enable" ] ; then
    ip6tables -w 100 -t mangle -N BOX_EXTERNAL
    ip6tables -w 100 -t mangle -F BOX_EXTERNAL
    ip6tables -w 100 -t mangle -N BOX_LOCAL
    ip6tables -w 100 -t mangle -F BOX_LOCAL

    for subnet6 in ${intranet6[@]} ; do
      ip6tables -w 100 -t mangle -A BOX_EXTERNAL -d ${subnet6} -j RETURN
      ip6tables -w 100 -t mangle -A BOX_LOCAL -d ${subnet6} -j RETURN
    done

    ip6tables -w 100 -t mangle -N LOCAL_IP_V6
    ip6tables -w 100 -t mangle -F LOCAL_IP_V6
    ip6tables -w 100 -t mangle -A BOX_EXTERNAL -j LOCAL_IP_V6
    ip6tables -w 100 -t mangle -A BOX_LOCAL -j LOCAL_IP_V6

    ip6tables -w 100 -t mangle -A BOX_EXTERNAL -p tcp -i lo -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
    ip6tables -w 100 -t mangle -A BOX_EXTERNAL -p udp -i lo -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}

    if [ "${ap_list}" != "" ] ; then
      for ap in ${ap_list[@]} ; do
        ip6tables -w 100 -t mangle -A BOX_EXTERNAL -p tcp -i ${ap} -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
        ip6tables -w 100 -t mangle -A BOX_EXTERNAL -p udp -i ${ap} -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
      done
      log Info "${ap_list[*]} IPv6 transparent proxy."
    fi

    ip6tables -w 100 -t mangle -I PREROUTING -j BOX_EXTERNAL

    ip6tables -w 100 -t mangle -A BOX_LOCAL -m owner --uid-owner ${box_user} --gid-owner ${box_group} -j RETURN

    if [ "${ignore_out_list}" != "" ] ; then
      for ignore in ${ignore_out_list[@]} ; do
        ip6tables -w 100 -t mangle -A BOX_LOCAL -o ${ignore} -j RETURN
      done
      log Info "${ignore_out_list[*]} ignore IPv6 transparent proxy."
    fi

    if [ "${proxy_mode}" = "blacklist" ] ; then
      if [ "${uid_list}" = "" ] ; then
        ip6tables -w 100 -t mangle -A BOX_LOCAL -p tcp -j MARK --set-mark ${id}
        ip6tables -w 100 -t mangle -A BOX_LOCAL -p udp -j MARK --set-mark ${id}
        log Info "IPv6 transparent proxy for all apps."
      else
        for appid in ${uid_list[@]} ; do
          ip6tables -w 100 -t mangle -A BOX_LOCAL -m owner --uid-owner ${appid} -j RETURN
        done
        ip6tables -w 100 -t mangle -A BOX_LOCAL -p tcp -j MARK --set-mark ${id}
        ip6tables -w 100 -t mangle -A BOX_LOCAL -p udp -j MARK --set-mark ${id}
        log Info "proxy mode: ${proxy_mode}, ${user_packages_list[*]} no IPv6 transparent proxy."
      fi
      if [ "${gid_list}" != "" ] ; then
        for gid in ${gid_list[@]} ; do
          ip6tables -w 100 -t mangle -A BOX_LOCAL -m owner --gid-owner ${gid} -j RETURN
        done
        log Info "proxy mode: ${proxy_mode}, GID ${gid_list[*]} no IPv6 transparent proxy."
      fi
    elif [ "${proxy_mode}" = "whitelist" ] ; then
      if [ "${uid_list}" != "" ] ; then
        for appid in ${uid_list[@]} ; do
          ip6tables -w 100 -t mangle -A BOX_LOCAL -p tcp -m owner --uid-owner ${appid} -j MARK --set-mark ${id}
          ip6tables -w 100 -t mangle -A BOX_LOCAL -p udp -m owner --uid-owner ${appid} -j MARK --set-mark ${id}
        done
        log Info "proxy mode: ${proxy_mode}, ${user_packages_list[*]} IPv6 transparent proxy."
      fi
      if [ "${gid_list}" != "" ] ; then
        for gid in ${gid_list[@]} ; do
          ip6tables -w 100 -t mangle -A BOX_LOCAL -p tcp -m owner --gid-owner ${gid} -j MARK --set-mark ${id}
          ip6tables -w 100 -t mangle -A BOX_LOCAL -p udp -m owner --gid-owner ${gid} -j MARK --set-mark ${id}
        done
        log Info "proxy mode: ${proxy_mode}, GID ${gid_list[*]} IPv6 transparent proxy."
      fi
    elif [ "${proxy_mode}" = "core" ] ; then
      log Info "proxy mode: ${proxy_mode}, no apps IPv6 transparent proxy."
    fi

    ip6tables -w 100 -t mangle -I OUTPUT -j BOX_LOCAL
  fi
}

stop_tproxy() {
  delete_ip_rules

  iptables -w 100 -t mangle -D PREROUTING -j BOX_EXTERNAL 2>/dev/null
  iptables -w 100 -t mangle -D OUTPUT -j BOX_LOCAL 2>/dev/null
  iptables -w 100 -t mangle -F BOX_EXTERNAL 2>/dev/null
  iptables -w 100 -t mangle -X BOX_EXTERNAL 2>/dev/null
  iptables -w 100 -t mangle -F BOX_LOCAL 2>/dev/null
  iptables -w 100 -t mangle -X BOX_LOCAL 2>/dev/null
  iptables -w 100 -t mangle -F LOCAL_IP_V4 2>/dev/null
  iptables -w 100 -t mangle -X LOCAL_IP_V4 2>/dev/null

  if [ "${ipv6}" = "enable" ] ; then
    ip6tables -w 100 -t mangle -D PREROUTING -j BOX_EXTERNAL 2>/dev/null
    ip6tables -w 100 -t mangle -D OUTPUT -j BOX_LOCAL 2>/dev/null
    ip6tables -w 100 -t mangle -F BOX_EXTERNAL 2>/dev/null
    ip6tables -w 100 -t mangle -X BOX_EXTERNAL 2>/dev/null
    ip6tables -w 100 -t mangle -F BOX_LOCAL 2>/dev/null
    ip6tables -w 100 -t mangle -X BOX_LOCAL 2>/dev/null
    ip6tables -w 100 -t mangle -F LOCAL_IP_V6 2>/dev/null
    ip6tables -w 100 -t mangle -X LOCAL_IP_V6 2>/dev/null
  fi
}

start_enhance() {
  create_ip_rules

  iptables -w 100 -t nat -N BOX_EXTERNAL
  iptables -w 100 -t nat -F BOX_EXTERNAL
  iptables -w 100 -t nat -N BOX_LOCAL
  iptables -w 100 -t nat -F BOX_LOCAL

  for subnet in ${intranet[@]} ; do
    iptables -w 100 -t nat -A BOX_EXTERNAL -d ${subnet} -j RETURN
    iptables -w 100 -t nat -A BOX_LOCAL -d ${subnet} -j RETURN
  done

  iptables -w 100 -t nat -N LOCAL_IP_V4
  iptables -w 100 -t nat -F LOCAL_IP_V4
  iptables -w 100 -t nat -A BOX_EXTERNAL -j LOCAL_IP_V4
  iptables -w 100 -t nat -A BOX_LOCAL -j LOCAL_IP_V4

  iptables -w 100 -t nat -A BOX_EXTERNAL -p tcp -i lo -j REDIRECT --to-ports ${redir_port}
  if [ "${ap_list}" != "" ] ; then
    for ap in ${ap_list[@]} ; do
      iptables -w 100 -t nat -A BOX_EXTERNAL -p tcp -i ${ap} -j REDIRECT --to-ports ${redir_port}
    done
    log Info "${ap_list[*]} TCP transparent proxy."
  fi

  iptables -w 100 -t nat -I PREROUTING -j BOX_EXTERNAL

  iptables -w 100 -t nat -A BOX_LOCAL -m owner --uid-owner ${box_user} --gid-owner ${box_group} -j RETURN
  if [ "${ignore_out_list}" != "" ] ; then
    for ignore in ${ignore_out_list[@]} ; do
      iptables -w 100 -t nat -A BOX_LOCAL -o ${ignore} -j RETURN
    done
    log Info "${ignore_out_list[*]} ignore TCP transparent proxy."
  fi

  if [ "${proxy_mode}" = "blacklist" ] ; then
    if [ "${uid_list}" = "" ] ; then
      iptables -w 100 -t nat -A BOX_LOCAL -p tcp -j REDIRECT --to-ports ${redir_port}
      log Info "TCP transparent proxy for all apps."
    else
      for appid in ${uid_list[@]} ; do
        iptables -w 100 -t nat -A BOX_LOCAL -m owner --uid-owner ${appid} -j RETURN
      done
      iptables -w 100 -t nat -A BOX_LOCAL -p tcp -j REDIRECT --to-ports ${redir_port}
      log Info "proxy mode: ${proxy_mode}, ${user_packages_list[*]} no TCP transparent proxy."
    fi
    if [ "${gid_list}" != "" ] ; then
      for gid in ${gid_list[@]} ; do
        iptables -w 100 -t nat -A BOX_LOCAL -m owner --gid-owner ${gid} -j RETURN
      done
      log Info "proxy mode: ${proxy_mode}, GID ${gid_list[*]} no TCP transparent proxy."
    fi
  elif [ "${proxy_mode}" = "whitelist" ] ; then
    if [ "${uid_list}" != "" ] ; then
      for appid in ${uid_list[@]} ; do
        iptables -w 100 -t nat -A BOX_LOCAL -p tcp -m owner --uid-owner ${appid} -j REDIRECT --to-ports ${redir_port}
      done
      log Info "proxy mode: ${proxy_mode}, ${user_packages_list[*]} TCP transparent proxy."
    fi
    if [ "${gid_list}" != "" ] ; then
      for gid in ${gid_list[@]} ; do
        iptables -w 100 -t nat -A BOX_LOCAL -p tcp -m owner --gid-owner ${gid} -j REDIRECT --to-ports ${redir_port}
      done
      log Info "proxy mode: ${proxy_mode}, GID ${gid_list[*]} TCP transparent proxy."
    fi
  elif [ "${proxy_mode}" = "core" ] ; then
    log Info "proxy mode: ${proxy_mode}, no apps TCP transparent proxy."
  fi

  iptables -w 100 -t nat -I OUTPUT -j BOX_LOCAL

  iptables -w 100 -t mangle -N BOX_EXTERNAL
  iptables -w 100 -t mangle -F BOX_EXTERNAL
  iptables -w 100 -t mangle -N BOX_LOCAL
  iptables -w 100 -t mangle -F BOX_LOCAL

  for subnet in ${intranet[@]} ; do
    iptables -w 100 -t mangle -A BOX_EXTERNAL -d ${subnet} -p udp ! --dport 53 -j RETURN
    iptables -w 100 -t mangle -A BOX_LOCAL -d ${subnet} -p udp ! --dport 53 -j RETURN
  done

  iptables -w 100 -t mangle -A BOX_EXTERNAL -p udp -i lo -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
  if [ "${ap_list}" != "" ] ; then
    for ap in ${ap_list[@]} ; do
      iptables -w 100 -t mangle -A BOX_EXTERNAL -p udp -i ${ap} -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
    done
    log Info "${ap_list[*]} UDP transparent proxy."
  fi

  iptables -w 100 -t mangle -I PREROUTING -j BOX_EXTERNAL

  iptables -w 100 -t mangle -A BOX_LOCAL -m owner --uid-owner ${box_user} --gid-owner ${box_group} -j RETURN
  if [ "${ignore_out_list}" != "" ] ; then
    for ignore in ${ignore_out_list[@]} ; do
      iptables -w 100 -t mangle -A BOX_LOCAL -o ${ignore} -j RETURN
    done
    log Info "${ignore_out_list[*]} ignore UDP transparent proxy."
  fi

  if [ "${proxy_mode}" = "blacklist" ] ; then
    if [ "${uid_list}" = "" ] ; then
      iptables -w 100 -t mangle -A BOX_LOCAL -p udp -j MARK --set-mark ${id}
      log Info "UDP transparent proxy for all apps."
    else
      for appid in ${uid_list[@]} ; do
        iptables -w 100 -t mangle -A BOX_LOCAL -m owner --uid-owner ${appid} -j RETURN
      done
      iptables -w 100 -t mangle -A BOX_LOCAL -p udp -j MARK --set-mark ${id}
      log Info "proxy mode: ${proxy_mode}, ${user_packages_list[*]} no UDP transparent proxy."
    fi
    if [ "${gid_list}" != "" ] ; then
      for gid in ${gid_list[@]} ; do
        iptables -w 100 -t mangle -A BOX_LOCAL -m owner --gid-owner ${gid} -j RETURN
      done
      log Info "proxy mode: ${proxy_mode}, GID ${gid_list[*]} no UDP transparent proxy."
    fi
  elif [ "${proxy_mode}" = "whitelist" ] ; then
    if [ "${uid_list}" != "" ] ; then
      for appid in ${uid_list[@]} ; do
        iptables -w 100 -t mangle -A BOX_LOCAL -p udp -m owner --uid-owner ${appid} -j MARK --set-mark ${id}
      done
      log Info "proxy mode: ${proxy_mode}, ${user_packages_list[*]} UDP transparent proxy."
    fi
    if [ "${gid_list}" != "" ] ; then
      for gid in ${gid_list[@]} ; do
        iptables -w 100 -t mangle -A BOX_LOCAL -p udp -m owner --gid-owner ${gid} -j MARK --set-mark ${id}
      done
      log Info "proxy mode: ${proxy_mode}, GID ${gid_list[*]} UDP transparent proxy."
    fi
  elif [ "${proxy_mode}" = "core" ] ; then
    log Info "proxy mode: ${proxy_mode}, no apps UDP transparent proxy."
  fi

  iptables -w 100 -t mangle -I OUTPUT -j BOX_LOCAL

  if [ "${ipv6}" = "enable" ] ; then
    ip6tables -w 100 -t mangle -N BOX_EXTERNAL
    ip6tables -w 100 -t mangle -F BOX_EXTERNAL
    ip6tables -w 100 -t mangle -N BOX_LOCAL
    ip6tables -w 100 -t mangle -F BOX_LOCAL

    for subnet6 in ${intranet6[@]} ; do
      ip6tables -w 100 -t mangle -A BOX_EXTERNAL -d ${subnet6} -p udp ! --dport 53 -j RETURN
      ip6tables -w 100 -t mangle -A BOX_LOCAL -d ${subnet6} -p udp ! --dport 53 -j RETURN
    done

    ip6tables -w 100 -t mangle -A BOX_EXTERNAL -p udp -i lo -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
    if [ "${ap_list}" != "" ] ; then
      for ap in ${ap_list[@]} ; do
        ip6tables -w 100 -t mangle -A BOX_EXTERNAL -p udp -i ${ap} -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
      done
      log Info "${ap_list[*]} IPv6 UDP transparent proxy."
    fi

    ip6tables -w 100 -t mangle -I PREROUTING -j BOX_EXTERNAL

    ip6tables -w 100 -t mangle -A BOX_LOCAL -m owner --uid-owner ${box_user} --gid-owner ${box_group} -j RETURN
    if [ "${ignore_out_list}" != "" ] ; then
      for ignore in ${ignore_out_list[@]} ; do
        ip6tables -w 100 -t mangle -A BOX_LOCAL -o ${ignore} -j RETURN
      done
      log Info "${ignore_out_list[*]} ignore IPv6 UDP transparent proxy."
    fi

    if [ "${proxy_mode}" = "blacklist" ] ; then
      if [ "${uid_list}" = "" ] ; then
        ip6tables -w 100 -t mangle -A BOX_LOCAL -p udp -j MARK --set-mark ${id}
        log Info "IPv6 UDP transparent proxy for all apps."
      else
        for appid in ${uid_list[@]} ; do
          ip6tables -w 100 -t mangle -A BOX_LOCAL -m owner --uid-owner ${appid} -j RETURN
        done
        ip6tables -w 100 -t mangle -A BOX_LOCAL -p udp -j MARK --set-mark ${id}
        log Info "proxy mode: ${proxy_mode}, ${user_packages_list[*]} no IPv6 UDP transparent proxy."
      fi
      if [ "${gid_list}" != "" ] ; then
        for gid in ${gid_list[@]} ; do
          ip6tables -w 100 -t mangle -A BOX_LOCAL -m owner --gid-owner ${gid} -j RETURN
        done
        log Info "proxy mode: ${proxy_mode}, GID ${gid_list[*]} no IPv6 UDP transparent proxy."
      fi
    elif [ "${proxy_mode}" = "whitelist" ] ; then
      if [ "${uid_list}" != "" ] ; then
        for appid in ${uid_list[@]} ; do
          ip6tables -w 100 -t mangle -A BOX_LOCAL -p udp -m owner --uid-owner ${appid} -j MARK --set-mark ${id}
        done
        log Info "proxy mode: ${proxy_mode}, ${user_packages_list[*]} IPv6 UDP transparent proxy."
      fi
      if [ "${gid_list}" != "" ] ; then
        for gid in ${gid_list[@]} ; do
          ip6tables -w 100 -t mangle -A BOX_LOCAL -p udp -m owner --gid-owner ${gid} -j MARK --set-mark ${id}
        done
        log Info "proxy mode: ${proxy_mode}, GID ${gid_list[*]} IPv6 UDP transparent proxy."
      fi
    elif [ "${proxy_mode}" = "core" ] ; then
      log Info "proxy mode: ${proxy_mode}, no apps IPv6 UDP transparent proxy."
    fi

    ip6tables -w 100 -t mangle -I OUTPUT -j BOX_LOCAL

    ip6tables -w 100 -t mangle -N DIVERT
    ip6tables -w 100 -t mangle -F DIVERT
    ip6tables -w 100 -t mangle -A DIVERT -j MARK --set-mark ${id}
    ip6tables -w 100 -t mangle -A DIVERT -j ACCEPT
    ip6tables -w 100 -t mangle -I PREROUTING -p tcp -m socket -j DIVERT
  fi
}

stop_enhance() {
  delete_ip_rules

  iptables -w 100 -t nat -D PREROUTING -j BOX_EXTERNAL 2>/dev/null
  iptables -w 100 -t nat -D OUTPUT -j BOX_LOCAL 2>/dev/null
  iptables -w 100 -t nat -F BOX_EXTERNAL 2>/dev/null
  iptables -w 100 -t nat -X BOX_EXTERNAL 2>/dev/null
  iptables -w 100 -t nat -F BOX_LOCAL 2>/dev/null
  iptables -w 100 -t nat -X BOX_LOCAL 2>/dev/null
  iptables -w 100 -t mangle -D PREROUTING -j BOX_EXTERNAL 2>/dev/null
  iptables -w 100 -t mangle -D OUTPUT -j BOX_LOCAL 2>/dev/null
  iptables -w 100 -t mangle -F BOX_EXTERNAL 2>/dev/null
  iptables -w 100 -t mangle -X BOX_EXTERNAL 2>/dev/null
  iptables -w 100 -t mangle -F BOX_LOCAL 2>/dev/null
  iptables -w 100 -t mangle -X BOX_LOCAL 2>/dev/null
  iptables -w 100 -t mangle -F DIVERT 2>/dev/null
  iptables -w 100 -t mangle -X DIVERT 2>/dev/null

  if [ "${ipv6}" = "enable" ] ; then
    ip6tables -w 100 -t nat -D PREROUTING -j BOX_EXTERNAL 2>/dev/null
    ip6tables -w 100 -t nat -D OUTPUT -j BOX_LOCAL 2>/dev/null
    ip6tables -w 100 -t nat -F BOX_EXTERNAL 2>/dev/null
    ip6tables -w 100 -t nat -X BOX_EXTERNAL 2>/dev/null
    ip6tables -w 100 -t nat -F BOX_LOCAL 2>/dev/null
    ip6tables -w 100 -t nat -X BOX_LOCAL 2>/dev/null
    ip6tables -w 100 -t mangle -D PREROUTING -j BOX_EXTERNAL 2>/dev/null
    ip6tables -w 100 -t mangle -D OUTPUT -j BOX_LOCAL 2>/dev/null
    ip6tables -w 100 -t mangle -F BOX_EXTERNAL 2>/dev/null
    ip6tables -w 100 -t mangle -X BOX_EXTERNAL 2>/dev/null
    ip6tables -w 100 -t mangle -F BOX_LOCAL 2>/dev/null
    ip6tables -w 100 -t mangle -X BOX_LOCAL 2>/dev/null
    ip6tables -w 100 -t mangle -F DIVERT 2>/dev/null
    ip6tables -w 100 -t mangle -X DIVERT 2>/dev/null
  fi
}

enable_ipv6() {
  echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6
  echo 0 > /proc/sys/net/ipv6/conf/default/disable_ipv6
}

disable_ipv6() {
  echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6
  echo 1 > /proc/sys/net/ipv6/conf/default/disable_ipv6
}

case "$1" in
  enable)
    if ! probe_user_group ; then
      log Error "failed to check Box user group, please make sure sing-box core is started."
      exit 1
    fi
    find_packages_uid
    intranet[${#intranet[@]}]=$(ip -4 a | awk '/inet/ {print $2}' | grep -vE "^127.0.0.1")
    if [ "${proxy_method}" = "TPROXY" ] ; then
      log Info "use TPROXY:TCP+UDP."
      log Info "creating ip(6)tables transparent proxy rules."
      iptables="iptables -w 100"
      start_tproxy && log Info "create iptables transparent proxy rules done." || (log Error "create iptables transparent proxy rules failed." && stop_tproxy >> /dev/null 2>&1)
      if [ "${ipv6}" = "enable" ] ; then
        log Info "use IPv6."
        enable_ipv6
        iptables="ip6tables -w 100"
        intranet6[${#intranet6[@]}]=$(ip -6 a | awk '/inet6/ {print $2}' | grep -vE "^fe80|^::1")
        start_tproxy && log Info "create ip6tables transparent proxy rules done." || (log Error "create ip6tables transparent proxy rules failed." && stop_tproxy >> /dev/null 2>&1)
      else
        disable_ipv6
        log Warn "disable IPv6."
      fi
    elif [ "${proxy_method}" = "ENHANCE" ] ; then
      log Info "use ENHANCE:TCP+UDP."
      log Info "creating ip(6)tables transparent proxy rules."
      iptables="iptables -w 100"
      start_enhance && log Info "create iptables transparent proxy rules done." || (log Error "create iptables transparent proxy rules failed." && stop_enhance >> /dev/null 2>&1)
      if [ "${ipv6}" = "enable" ] ; then
        log Info "use IPv6."
        enable_ipv6
        iptables="ip6tables -w 100"
        intranet6[${#intranet6[@]}]=$(ip -6 a | awk '/inet6/ {print $2}' | grep -vE "^fe80|^::1")
        start_enhance && log Info "create ip6tables transparent proxy rules done." || (log Error "create ip6tables transparent proxy rules failed." && stop_enhance >> /dev/null 2>&1)
      else
        disable_ipv6
        log Warn "disable IPv6."
      fi
    else
      log Error "unsupported proxy_method: ${proxy_method}. Use TPROXY or ENHANCE."
      exit 1
    fi
    ;;
  disable)
    log Warn "cleaning up ip(6)tables transparent proxy rules."
    probe_user_group
    iptables="iptables -w 100" && stop_tproxy >> /dev/null 2>&1
    iptables="ip6tables -w 100" && stop_tproxy >> /dev/null 2>&1
    iptables="iptables -w 100" && stop_enhance >> /dev/null 2>&1
    iptables="ip6tables -w 100" && stop_enhance >> /dev/null 2>&1
    log Warn "clean up ip(6)tables transparent proxy rules done."
    enable_ipv6
    log Warn "enable IPv6."
    ;;
  renew)
    log Warn "cleaning up ip(6)tables transparent proxy rules."
    iptables="iptables -w 100" && stop_tproxy >> /dev/null 2>&1
    iptables="ip6tables -w 100" && stop_tproxy >> /dev/null 2>&1
    iptables="iptables -w 100" && stop_enhance >> /dev/null 2>&1
    iptables="ip6tables -w 100" && stop_enhance >> /dev/null 2>&1
    log Warn "clean up ip(6)tables transparent proxy rules done."
    sleep 3
    if ! probe_user_group ; then
      log Error "failed to check Box user group, please make sure sing-box core is started."
      exit 1
    fi
    find_packages_uid
    intranet[${#intranet[@]}]=$(ip -4 a | awk '/inet/ {print $2}' | grep -vE "^127.0.0.1")
    if [ "${proxy_method}" = "TPROXY" ] ; then
      log Info "use TPROXY:TCP+UDP."
      log Info "creating ip(6)tables transparent proxy rules."
      iptables="iptables -w 100"
      start_tproxy && log Info "create iptables transparent proxy rules done." || (log Error "create iptables transparent proxy rules failed." && stop_tproxy >> /dev/null 2>&1)
      if [ "${ipv6}" = "enable" ] ; then
        log Info "use IPv6."
        enable_ipv6
        iptables="ip6tables -w 100"
        intranet6[${#intranet6[@]}]=$(ip -6 a | awk '/inet6/ {print $2}' | grep -vE "^fe80|^::1")
        start_tproxy && log Info "create ip6tables transparent proxy rules done." || (log Error "create ip6tables transparent proxy rules failed." && stop_tproxy >> /dev/null 2>&1)
      else
        disable_ipv6
        log Warn "disable IPv6."
      fi
    elif [ "${proxy_method}" = "ENHANCE" ] ; then
      log Info "use ENHANCE:TCP+UDP."
      log Info "creating ip(6)tables transparent proxy rules."
      iptables="iptables -w 100"
      start_enhance && log Info "create iptables transparent proxy rules done." || (log Error "create iptables transparent proxy rules failed." && stop_enhance >> /dev/null 2>&1)
      if [ "${ipv6}" = "enable" ] ; then
        log Info "use IPv6."
        enable_ipv6
        iptables="ip6tables -w 100"
        intranet6[${#intranet6[@]}]=$(ip -6 a | awk '/inet6/ {print $2}' | grep -vE "^fe80|^::1")
        start_enhance && log Info "create ip6tables transparent proxy rules done." || (log Error "create ip6tables transparent proxy rules failed." && stop_enhance >> /dev/null 2>&1)
      else
        disable_ipv6
        log Warn "disable IPv6."
      fi
    else
      log Error "unsupported proxy_method: ${proxy_method}. Use TPROXY or ENHANCE."
      exit 1
    fi
    ;;
  enable_ipv6)
    enable_ipv6
    log Warn "enable IPv6."
    ;;
  disable_ipv6)
    disable_ipv6
    log Warn "disable IPv6."
    ;;
  *)
    log Error "$0 $1 usage: $0 {enable|disable|renew|enable_ipv6|disable_ipv6}"
    exit 1
    ;;
esac