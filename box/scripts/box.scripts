#!/system/bin/sh

export PATH="/data/adb/magisk:/data/adb/ksu/bin:$PATH:/data/data/com.termux/files/usr/bin"

clear; cd ${0%/*}

normal=$(printf '\033[0m'); green=$(printf '\033[0;32m'); red=$(printf '\033[91m')

scripts=$(realpath $0)
scripts_dir=$(dirname ${scripts})
source ${scripts_dir}/box.config
id="222"

log() {
  export TZ=Asia/Shanghai
  now=$(date +"[%Y-%m-%d %H:%M:%S %Z]")
  case $1 in
    Info)
      [ -t 1 ] && echo -e "\033[1;32m${now} [Info]: $2\033[0m" || echo "${now} [Info]: $2"
      ;;
    Warn)
      [ -t 1 ] && echo -e "\033[1;33m${now} [Warn]: $2\033[0m" || echo "${now} [Warn]: $2"
      ;;
    Error)
      [ -t 1 ] && echo -e "\033[1;31m${now} [Error]: $2\033[0m" || echo "${now} [Error]: $2"
      ;;
    *)
      [ -t 1 ] && echo -e "\033[1;30m${now} [$1]: $2\033[0m" || echo "${now} [$1]: $2"
      ;;
  esac
}

uid_list=()
find_packages_uid() {
  for user_package in ${user_packages_list[@]} ; do
    user=$(echo ${user_package} | awk -F ':' '{print $1}')
    package=$(echo ${user_package} | awk -F ':' '{print $2}')
    uid_list[${#uid_list[@]}]=$(expr ${user} \* "100000" + $(awk '{if($1=="'${package}'"){print $2}}' /data/system/packages.list))
  done
}

create_tun_link() {
  mkdir -p /dev/net
  [ ! -L /dev/net/tun ] && ln -s /dev/tun /dev/net/tun
}

probe_tun_device() {
  ifconfig | grep -q ${tun_device} || return 1
}

forward() {
  iptables -w 100 $1 FORWARD -p udp -o ${tun_device} -j ACCEPT
  iptables -w 100 $1 FORWARD -p udp -i ${tun_device} -j ACCEPT
  ip6tables -w 100 $1 FORWARD -p udp -o ${tun_device} -j ACCEPT
  ip6tables -w 100 $1 FORWARD -p udp -i ${tun_device} -j ACCEPT
}


start_enhance() {
  ip rule add fwmark ${id} table ${id} pref ${id}
  ip route add local default dev lo table ${id}

  # TCP redirect (nat table)
  iptables -w 100 -t nat -N BOX_EXTERNAL
  iptables -w 100 -t nat -F BOX_EXTERNAL
  iptables -w 100 -t nat -N BOX_LOCAL
  iptables -w 100 -t nat -F BOX_LOCAL
  for subnet in ${intranet[@]} ; do
    iptables -w 100 -t nat -A BOX_EXTERNAL -d ${subnet} -j RETURN
  done
  iptables -w 100 -t nat -A BOX_EXTERNAL -p tcp -i lo -j REDIRECT --to-ports ${redir_port}
  if [ "${ap_list}" != "" ]; then
    for ap in ${ap_list[@]} ; do
      iptables -w 100 -t nat -A BOX_EXTERNAL -p tcp -i ${ap} -j REDIRECT --to-ports ${redir_port}
    done
    log Info "${ap_list[*]} TCP transparent proxy."
  fi
  iptables -w 100 -t nat -I PREROUTING -j BOX_EXTERNAL
  iptables -w 100 -t nat -A BOX_LOCAL -m owner --gid-owner 23333 -j RETURN
  for appid in ${uid_list[@]} ; do
    iptables -w 100 -t nat -A BOX_LOCAL -m owner --uid-owner ${appid} -j RETURN
  done
  iptables -w 100 -t nat -A BOX_LOCAL -p tcp -j REDIRECT --to-ports ${redir_port}
  iptables -w 100 -t nat -I OUTPUT -j BOX_LOCAL
  iptables -w 100 -t nat -A OUTPUT -d 127.0.0.1 -p tcp -m owner --gid-owner 23333 --dport ${redir_port} -j REJECT

  # UDP TPROXY (mangle table)
  iptables -w 100 -t mangle -N BOX_EXTERNAL
  iptables -w 100 -t mangle -F BOX_EXTERNAL
  iptables -w 100 -t mangle -N BOX_LOCAL
  iptables -w 100 -t mangle -F BOX_LOCAL
  for subnet in ${intranet[@]} ; do
    iptables -w 100 -t mangle -A BOX_EXTERNAL -d ${subnet} -p udp ! --dport 53 -j RETURN
    iptables -w 100 -t mangle -A BOX_EXTERNAL -d ${subnet} ! -p udp -j RETURN
  done
  iptables -w 100 -t mangle -A BOX_EXTERNAL -p udp -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
  iptables -w 100 -t mangle -I PREROUTING -j BOX_EXTERNAL
  iptables -w 100 -t mangle -A BOX_LOCAL -m owner --gid-owner 23333 -j RETURN
  for appid in ${uid_list[@]} ; do
    iptables -w 100 -t mangle -A BOX_LOCAL -m owner --uid-owner ${appid} -j RETURN
  done
  iptables -w 100 -t mangle -A BOX_LOCAL -p udp -j MARK --set-mark ${id}
  iptables -w 100 -t mangle -I OUTPUT -j BOX_LOCAL
  iptables -w 100 -A OUTPUT -d 127.0.0.1 -p udp -m owner --gid-owner 23333 --dport ${tproxy_port} -j ACCEPT

  # DIVERT for TCP sockets
  iptables -w 100 -t mangle -N DIVERT
  iptables -w 100 -t mangle -F DIVERT
  iptables -w 100 -t mangle -A DIVERT -j MARK --set-mark ${id}
  iptables -w 100 -t mangle -A DIVERT -j ACCEPT
  iptables -w 100 -t mangle -I PREROUTING -p tcp -m socket -j DIVERT
}

stop_enhance() {
  ip rule del fwmark ${id} table ${id}
  ip route flush table ${id}
  iptables -w 100 -t nat -D PREROUTING -j BOX_EXTERNAL
  iptables -w 100 -t nat -D OUTPUT -j BOX_LOCAL
  iptables -w 100 -t nat -F BOX_EXTERNAL
  iptables -w 100 -t nat -X BOX_EXTERNAL
  iptables -w 100 -t nat -F BOX_LOCAL
  iptables -w 100 -t nat -X BOX_LOCAL
  iptables -w 100 -t nat -D OUTPUT -d 127.0.0.1 -p tcp -m owner --gid-owner 23333 --dport ${redir_port} -j REJECT
  iptables -w 100 -t mangle -D PREROUTING -j BOX_EXTERNAL
  iptables -w 100 -t mangle -D PREROUTING -p tcp -m socket -j DIVERT
  iptables -w 100 -t mangle -D OUTPUT -j BOX_LOCAL
  iptables -w 100 -t mangle -F BOX_EXTERNAL
  iptables -w 100 -t mangle -X BOX_EXTERNAL
  iptables -w 100 -t mangle -F BOX_LOCAL
  iptables -w 100 -t mangle -X BOX_LOCAL
  iptables -w 100 -t mangle -F DIVERT
  iptables -w 100 -t mangle -X DIVERT
  iptables -w 100 -t mangle -D OUTPUT -d 127.0.0.1 -p udp -m owner --gid-owner 23333 --dport ${tproxy_port} -j ACCEPT
}

start_tproxy() {
  ip rule add fwmark ${id} table ${id} pref ${id}
  ip route add local default dev lo table ${id}
  
  iptables -w 100 -t mangle -N BOX_EXTERNAL
  iptables -w 100 -t mangle -F BOX_EXTERNAL

  # Bypass intranet
  for subnet in ${intranet[@]} ; do
    iptables -w 100 -t mangle -A BOX_EXTERNAL -d ${subnet} -p udp ! --dport 53 -j RETURN
    iptables -w 100 -t mangle -A BOX_EXTERNAL -d ${subnet} ! -p udp -j RETURN
  done
  
  iptables -w 100 -t mangle -A BOX_EXTERNAL -p tcp -i lo -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
  iptables -w 100 -t mangle -A BOX_EXTERNAL -p udp -i lo -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
  
  if [ "${ap_list}" != "" ]; then
    for ap in ${ap_list[@]} ; do
      iptables -w 100 -t mangle -A BOX_EXTERNAL -p tcp -i ${ap} -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
      iptables -w 100 -t mangle -A BOX_EXTERNAL -p udp -i ${ap} -j TPROXY --on-port ${tproxy_port} --tproxy-mark ${id}
    done
    log Info "${ap_list[*]} transparent proxy."
  fi

  iptables -w 100 -t mangle -I PREROUTING -j BOX_EXTERNAL

  iptables -w 100 -t mangle -N BOX_LOCAL
  iptables -w 100 -t mangle -F BOX_LOCAL

  # Bypass intranet
  for subnet in ${intranet[@]} ; do
    iptables -w 100 -t mangle -A BOX_LOCAL -d ${subnet} -p udp ! --dport 53 -j RETURN
    iptables -w 100 -t mangle -A BOX_LOCAL -d ${subnet} ! -p udp -j RETURN
  done
  
  iptables -w 100 -t mangle -I BOX_LOCAL -m owner --gid-owner 23333 -j RETURN

  if [ "${uid_list}" = "" ]; then
    iptables -w 100 -t mangle -A BOX_LOCAL -p tcp -j MARK --set-mark ${id}
    iptables -w 100 -t mangle -A BOX_LOCAL -p udp -j MARK --set-mark ${id}
    log Info "transparent proxy for all apps."
  else
    for appid in ${uid_list[@]} ; do
      iptables -w 100 -t mangle -A BOX_LOCAL -m owner --uid-owner ${appid} -j RETURN
    done
    iptables -w 100 -t mangle -A BOX_LOCAL -p tcp -j MARK --set-mark ${id}
    iptables -w 100 -t mangle -A BOX_LOCAL -p udp -j MARK --set-mark ${id}
    log Info "proxy mode: ${mode}, ${user_packages_list[*]} no transparent proxy."
  fi
  
  iptables -w 100 -t mangle -I OUTPUT -j BOX_LOCAL

  iptables -w 100 -t mangle -N DIVERT
  iptables -w 100 -t mangle -F DIVERT
  iptables -w 100 -t mangle -A DIVERT -j MARK --set-mark ${id}
  iptables -w 100 -t mangle -A DIVERT -j ACCEPT
  iptables -w 100 -t mangle -I PREROUTING -p tcp -m socket -j DIVERT

  iptables -w 100 -D OUTPUT -d 127.0.0.1 -p tcp -m owner --gid-owner 23333 -m tcp --dport ${tproxy_port} -j REJECT
}

stop_tproxy() {
  ip rule del fwmark ${id} table ${id}
  ip route flush table ${id}
  
  iptables -w 100 -t mangle -D PREROUTING -j BOX_EXTERNAL
  iptables -w 100 -t mangle -D PREROUTING -p tcp -m socket -j DIVERT
  iptables -w 100 -t mangle -D OUTPUT -j BOX_LOCAL
  iptables -w 100 -t mangle -F BOX_EXTERNAL
  iptables -w 100 -t mangle -X BOX_EXTERNAL
  iptables -w 100 -t mangle -F BOX_LOCAL
  iptables -w 100 -t mangle -X BOX_LOCAL
  iptables -w 100 -t mangle -F DIVERT
  iptables -w 100 -t mangle -X DIVERT
  iptables -w 100 -D OUTPUT -d 127.0.0.1 -p tcp -m owner --gid-owner 23333 -m tcp --dport ${tproxy_port} -j REJECT
}

start_tun() {
  create_tun_link
  probe_tun_device
  forward -I
}

stop_tun() {
  forward -D >> /dev/null 2>&1
}

start() {
  if [ -f "${binfile}" ]; then
    chmod 755 ${binfile}
    chown root:net_admin ${binfile}
    ulimit -SHn 1048576
    case "${mode}" in
      tproxy) start_tproxy ;;
      tun) start_tun ;;
      enhance) start_enhance ;;
    esac
    ${busybox} setuidgid 0:23333 nohup ${binfile} run -c ${workfile} -D ../run/ > /dev/null 2> ../run/error_sing-box.log &
  fi
}

stop() {
  PID=$(pidof ${binfile})
  pidof ${binfile} > /dev/null 2>&1 && kill -15 ${PID} > /dev/null 2>&1
  case "${mode}" in
    tproxy) stop_tproxy ;;
    tun) stop_tun ;;
    enhance) stop_enhance ;;
  esac
  rm ${0%/*}/uids.list
}

net_ip() {
  local_ip=$(ip route get 1.1.1.1 | awk '{for(i=1;i<=NF;i++) if ($i=="src") {print $(i+1); break}}') && echo "${local_ip}"
}

net_id() {
  wlan_interfaces=( $(iw dev | awk '$1=="Interface"{print $2}') )
  for interface in "${wlan_interfaces[@]}"; do
    ssid=$(iw dev "$interface" link | awk '/SSID/{print $2}')
    if [ -n "$ssid" ]; then
      echo "$ssid"
      return
    fi
  done
  echo "mobile"
}

run() { 
  stop
  start 
}

# Created on May 9 2024
# Updated on August 4 2025 to add enhance mode
# Updated on August 20 2025 to fix DNS in enhance mode
